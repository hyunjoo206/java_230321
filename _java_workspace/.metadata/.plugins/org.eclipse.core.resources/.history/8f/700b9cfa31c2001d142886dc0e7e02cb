package day15;

public class Student {
	/* 학생클래스 : 한 학생의 정보를 나타내는 클래스 
	- 학번, 이름, 주민번호, 학부, 학과, 수강과목(과목클래스를 배열로 생성)
	- 수강과목의 번지를 대신할 subCount 
	- 메서드 
	  - 수강과목 추가 (배열이 다 찼다면 늘려주기) 
	  - 수강과목 삭제
	- 생성자, getter/setter, 출력메서드(print) - 학생정보 출력되는 메서드 1개, 학생수강정보 출력되는 메서드 1개
	*/
	
	//멤버변수
	private String stdNum; //학번
	private String stdName; //이름
	private String registerNum; //주민번호
	private String faculty; //학부
	private String major; //학과
	private Subject[] subjectLIst; //수강과목 배열
	private int subCount = 0; // 수강과목 개수
	
	
	//생성자
	public Student(String stdNum, String stdName, String registerNum, String faculty, String major) {
        this.stdNum = stdNum;
        this.stdName = stdName;
        this.registerNum = registerNum;
        this.faculty = faculty;
        this.major = major;
        this.subjectLIst = new Subject[5]; // 초기에 수강과목 배열 크기를 5로 설정
        this.subCount = 0;
	}
	
	//수강과목 추가 메서드
	public void addCourse (Subject course) {
		if(subCount == subjectLIst.length) { //배열이 다 찼으면 크기를 2배로 늘리는 메서드
			Subject[] newsubjectLIst = new Subject[subCount *2];
			for(int i = 0; i<subCount; i++) {
				newsubjectLIst[i] = subjectLIst[i];
			}
			subjectLIst = newsubjectLIst;
		} 
		subjectLIst[subCount] = course;
		subCount ++;
	}
	
	//수강과목 삭제 메서드
    public void removeCourse(int index) {
        for (int i = index; i < subCount - 1; i++) {
            subjectLIst[i] = subjectLIst[i + 1];
        }
        subjectLIst[subCount - 1] = null;
        subCount--;
    }


    

}
	
	

