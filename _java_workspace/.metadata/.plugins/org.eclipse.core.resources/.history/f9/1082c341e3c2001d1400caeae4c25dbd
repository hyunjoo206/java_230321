package day15;

import java.util.Scanner;

public class StudentManager implements Program {
	
	//멤버변수 - Student(class)만 가져오면 Subject 기능이 그 안에 있어서 따로 안 가져와도 됨
	// Student class, (index로 사용할 학생에 대한) stdstdCount 변수
	
	private Student[] std = new Student[5];
	private int stdCount; //등록한 학생 카운트     
	    
	@Override
	public void printStudent() {
		System.out.println("---------학생리스트-------");
		for(int i = 0; i<stdCount; i++) {
			std[i].stdPrint(); //학생정보만 출력
//			printStudentOne(std[i]); //학생정보 + 수강정보
			System.out.println("--------------------");
		}
	}

	@Override
	public void insertStudent(Scanner scan) {
			// 1명의 학생정보 값을 입력받아 객체를 생성한 후 std 배열에 등록
	        
			// 입력받기
			System.out.println("--------학생 정보 입력--------");
	        System.out.print("학번: ");
	        String studentID = scan.next();
	        System.out.print("이름: ");
	        String name = scan.next();
	        System.out.print("주민번호: ");
	        String ssn = scan.next();
	        System.out.print("학부: ");
	        String college = scan.next();
	        System.out.print("학과: ");
	        String major = scan.next();
	        System.out.println("---------------------------");
	        
	        //입력받은 값으로 객체생성
	        Student s = new Student(studentID, name, ssn, college, major);
	       
	        //배열이 다 찼다면 더 큰 배열을 생성 후 배열복사
			if (stdCount == std.length) { // 배열이 다 찼으면 크기를 +5 늘리는 메서드
				Student[] tmp = new Student[stdCount + 5]; // 새배열
				// arraycopy를 이용한 배열복사
				// System.arraycopy(구배열, 시작번지, 신배열, 시작번지, 총개수)
				System.arraycopy(std, 0, tmp, 0, stdCount);// 
				// 새로 만든 배열로 연결
				std = tmp;
			}
       
	        //std 배열에 등록
	        std[stdCount] = s;
	        stdCount++; //인원증가(배열 번지 증가)

	        System.out.println("등록이 완료되었습니다.");
	}

	@Override
	public void searchStudent(Scanner scan) {
		// 검색할 학생이름을 입력받아 배열에서 탐색 후 있다면 
		System.out.println("-----------학생검색---------");
		System.out.print("검색할 학생 이름를 입력하세요.>");
		String name = scan.next();
		int index = -1; //찾은 학생의 배열주소 입력
		
		// 학생정보+수강정보 출력 -> printStudentOne() 호출
		
		for(int i=0; i<stdCount; i++) { //std.length까지 하면 다 차있어야 하니까 nullpointexception 발생할 수 있음
			if(std[i].getStdName().equals(name)) {
				printStudentOne(std[i]);
				index = i; 
			}
		}
		// 없을 경우 
		if(index == -1) {
			System.out.println("검색한 학생이 없습니다.");
		}
	}

	
	@Override //선생님꺼 다시 복사해서 넣기----------------------------------
	public void registerSubject(Scanner scan) {
		//수강신청을 하고자하는 학생 체크
		// 그 학생의 배열에 위치를 체크
		// 학번이 없다면,,
		// 신청할 과목의 객체 생성(과목정보 입력받기)
		// 신청메서드 호출 insertSubject(객체)
		

		System.out.print("수강신청하는 학생 이름을 입력해주세요.>");
		String name = scan.next();
		
		for(int i=0; i<stdCount; i++) {
			if(std[i].getStdName().equals(name)) {
				//if(name.equals(std[i].getStdName())해도 됨
				System.out.print("수강과목을 입력하세요.> ");
				String subject = scan.next();
				
				Subject ns = new Subject(subject);
				std[i].insertSubject(ns);
				System.out.println("수강과목 :"+ns.getSubName());
			}
		}

		
		
	}

	@Override
	public void deleteSubject(Scanner scan) {
		int index = -1;
		System.out.print("수강삭제할 학생 이름을 입력해주세요.>");
		String name = scan.next();
		
		for(int i=0; i<stdCount; i++) {
			if(std[i].getStdName().equals(name)) {
				
				System.out.print("수강삭제할 과목을 입력하세요.> ");
				String subName = scan.next();
				
				std[i].deleteSubject(subName);
				System.out.println("삭제되었습니다.");
			}
		}
		if(index == -1) {
			System.out.println("검색한 학생이 없습니다.");
		}
		
	}
	
	
	// 1명의 학생정보 + 수강정보를 같이 출력하고 싶을 때
	public void printStudentOne(Student s) {
		System.out.println("----학생정보----");
		s.stdPrint(); //한 명의 Student 객체
		System.out.println("----수강정보----");
		s.subPrint(); //학생에 대한 수강정보
	}
	
	
	

}
