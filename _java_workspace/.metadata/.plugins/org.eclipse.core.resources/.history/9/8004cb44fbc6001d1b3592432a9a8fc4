package day15;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Scanner;

public class WordManager {
	private ArrayList<Word> word = new ArrayList<Word>();
	
	//메뉴출력
	public void printMenu() {
		System.out.println();
		System.out.println("----메뉴----");
		System.out.println("1.단어추가");
		System.out.println("2.단어출력");
		System.out.println("3.단어검색");
		System.out.println("4.단어수정");
		System.out.println("5.단어삭제");
		System.out.println("6.파일로 출력");
		System.out.println("7.종료");
		System.out.println("-----------");
	}
	
	//기본단어 등록
	public void addWord() {
		word.add(new Word("apple","사과"));
		word.add(new Word("peach","복숭아"));
		word.add(new Word("pineapple","파인애플"));
		word.add(new Word("grape","포도"));
		word.add(new Word("banana","바나나"));
	}
	
	//---------------------------------------------------
	//단어추가
	public void add(Scanner scan) {
		System.out.println("단어를 추가하세요");
		String inputword = scan.next();
		System.out.println("뜻을 추가하세요");
		String inputmean = scan.next();
		
		Word w = new Word(inputword, inputmean);
		word.add(w);
		System.out.println("단어가 추가되었습니다.");
		
//		이렇게도 가능
//		Word w = new Word();
//		w.setWord(scan.next());
//		w.setMean(scan.next());
//		list.add(w);
		
	}
	
	//단어출력
	public void printWord() {
		System.out.println("--단어장--");
//		word.sort(new Comparator<Word>() { //Collections가 안 되는 이유는 값이 2개라서 뭘 기준으로 정렬할지 모르기 때문
//
//			@Override
//			public int compare(Word o1, Word o2) {
//				// TODO Auto-generated method stub
//				return o1.getWord().compareTo(o2.getWord());
//			}
//		});
		
		//정렬
		Collections.sort(word, new Comparator<Word>(){	
			public int compare(Word o1, Word o2) {
			return o1.getWord().compareTo(o2.getWord());
		}
		} );
		
		//출력
		for(Word tmp : word) {
			System.out.println(tmp.getWord()+":"+tmp.getMean());
		}
	}
	
	//단어검색
	public void searchWord(Scanner scan) {
		System.out.println("검색할 단어를 입력하세요");
		String inputword = scan.next();
		
		for(Word w : word) {
			if(w.getWord().equals(inputword)) {
				System.out.println(w.getWord()+":"+w.getMean());
			}
		}
	}
	
	//단어수정
	public void updateWord(Scanner scan) {
		System.out.println("수정할 단어를 입력하세요");
		String inputword = scan.next();
		Word upword = null;
		
		for(Word w : word) {
			if(w.getWord().equals(inputword)) {
				upword = w;
				break;
			}
		}
		
		if(upword == null) {
			System.out.println("해당하는 단어가 없습니다.");
		}
		
		System.out.println("수정할 의미를 입력하세요");
		String inputmean = scan.next();
		
		Word w2 = new Word(inputword, inputmean);
		
//		for(int i =0; i<word.size(); i++) {
//			if(word.get(i).getWord().equals(inputword)) {
//				word.set(i, w2);//수정
//				return;
//			}
//		}
		
		upword.setMean(inputmean);
		System.out.println("단어가 수정되었습니다.");
		}
		

	//단어삭제
	public void deleteWord(Scanner scan) {
		System.out.println("삭제할 단어를 입력하세요");
		String inputword = scan.next();
		for(int i=0; i<word.size(); i++) {
			if(word.get(i).getWord().equals(inputword)) {
				word.remove(i);
				System.out.println("삭제되었습니다.");
				return;
			}
		}
	}
	
	//파일로 출력
	public void printFile() throws IOException {
		FileWriter fs = new FileWriter("word.txt"); //파일에 내용 쓰기(파일생성, 쓰기위한 클래스)
		BufferedWriter bw = new BufferedWriter(fs); //데이터를 버퍼에 저장했다가 한 번에 파일에 씀
		
		//단어장의 list의 값을 String화 하기 위해 StringBuffer
		//객체 생성
		
		StringBuffer sb = new StringBuffer(); //단어장 내용을 하나씩 StringBuffer에 덧붙여서 모든 내용을 하나의 문자열로 만들어줌
		String data = null;
		int cnt = 0;
		
		//정렬하고 싶으면
		Collections.sort(word);
		
		while(cnt < word.size()) { //정렬된 단어장 내용을 StringBuffer에 덧붙임
			sb.append(word.get(cnt));
			sb.append("\r\n"); //줄바꿈
			cnt++;
		}
		
		data = sb.toString();
		System.out.println(data);
		bw.write(data);// bw.wirte(data) 이용해서 파일에 쓰고 있음
		bw.close();
		fs.close();
	}
	
	
}
